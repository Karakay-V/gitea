name: Docker image - rootfull

on:
  workflow_dispatch:

env:
  GITHUB_URL: https://api.github.com/repos/go-gitea/gitea/releases/latest
  REGISTRY_IMAGE: karakayv/gitea

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      github-tag: ${{ steps.github-tag.outputs.tag }}
      docker-tag: ${{ steps.docker-tag.outputs.tag }}
      docker-exists-normal: ${{ steps.docker-exists-normal.outputs.exists }}
      docker-exists-rootless: ${{ steps.docker-exists-rootless.outputs.exists }}
    steps:
      - name: Check github tag
        id: github-tag
        run: echo "tag=`curl -sL $GITHUB_URL | jq -r ".tag_name"`" >> "$GITHUB_OUTPUT"
    
      - name: Set docker tag
        id: docker-tag
        run: echo "tag=`echo ${{ steps.github-tag.outputs.TAG }} | sed 's/^v//'`" >> "$GITHUB_OUTPUT"

      - name: Check that docker normal image already exists
        id: docker-exists-normal
        shell: bash
        env:
          DOCKER_URL: https://hub.docker.com/v2/repositories/karakayv/gitea/tags/${{ steps.docker-tag.outputs.TAG }}
        run: |
         if [ `curl --silent -f -lSL $DOCKER_URL` ]; then
           echo "exists=true" >> "$GITHUB_OUTPUT"
         else
           echo "exists=false" >> "$GITHUB_OUTPUT"
         fi

      - name: Check that docker rootless image already exists
        id: docker-exists-rootless
        shell: bash
        env:
          DOCKER_URL: https://hub.docker.com/v2/repositories/karakayv/gitea/tags/${{ steps.docker-tag.outputs.TAG }}-rootless
        run: |
         if [ `curl --silent -f -lSL $DOCKER_URL` ]; then
           echo "exists=true" >> "$GITHUB_OUTPUT"
         else
           echo "exists=false" >> "$GITHUB_OUTPUT"
         fi
  
  build:
    runs-on: ubuntu-latest
    needs:
      - check
    if: ${{ needs.check.outputs.docker-exists-normal == 'false' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV          
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'go-gitea/gitea'
          ref: ${{ needs.check.outputs.github-tag }}
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
      
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
      
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
